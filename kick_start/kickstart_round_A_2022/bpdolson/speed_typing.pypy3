from collections import defaultdict as dd
from collections import deque
import bisect
import heapq

def ri():
    return int(input())

def rl():
    return list(map(int, input().split()))


def solve():
    s = input()
    t = input()
    n = len(s)
    m = len(t)
    i = 0
    j = 0
    cost = 0
    while (i < n and j < m):
        if s[i] == t[j]:
            i += 1
            j += 1
        else:
            j += 1 
            cost += 1

    if i < n:
        print ("IMPOSSIBLE")
    else:
        print (cost + m - j)







t = ri()
for i in range(1, t + 1):
    print ("Case #{}:".format(i), end = " ")
    solve()
