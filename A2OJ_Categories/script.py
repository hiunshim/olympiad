import os

folder = r"./"

files_to_rename = {"Category33.html": "Dynamic Programming",
"Category92.html": "implementation",
"Category86.html": "math",
"Category56.html": "Greedy",
"Category13.html": "DFS &amp; BFS &amp; Dijkstra",
"Category85.html": "brute force",
"Category88.html": "data structures",
"Category407.html": "Codeforces Div. 2 - A Problems",
"Category409.html": "Codeforces Div. 2 - C Problems",
"Category408.html": "Codeforces Div. 2 - B Problems",
"Category410.html": "Codeforces Div. 2 - D Problems",
"Category411.html": "Codeforces Div. 2 - E Problems",
"Category40.html": "Binary Search &amp; Ternary Search",
"Category94.html": "constructive algorithms",
"Category95.html": "sortings",
"Category101.html": "graphs",
"Category21.html": "Geometry",
"Category41.html": "Number Theory",
"Category87.html": "strings",
"Category90.html": "combinatorics",
"Category334.html": "Codeforces Div. 1, D",
"Category89.html": "trees",
"Category25.html": "Segment Tree",
"Category12.html": "Network Flow",
"Category100.html": "probabilities",
"Category96.html": "two pointers",
"Category463.html": "Codeforces Div. 2 - F Problems",
"Category98.html": "dsu",
"Category97.html": "bitmasks",
"Category32.html": "Matrix Power",
"Category91.html": "games",
"Category17.html": "MST,Disjoint sets,SCC",
"Category93.html": "hashing",
"Category26.html": "Binary Indexed Tree",
"Category99.html": "divide and conquer",
"Category62.html": "Ad-hoc",
"Category664.html": "CUET",
"Category58.html": "Maximum Matching - Vertex Cover on Bipartite Graph",
"Category49.html": "Trie",
"Category119.html": "backtracking",
"Category76.html": "bfs",
"Category72.html": "Heavy-Light Descomposition",
"Category126.html": "Non-Classical Dynamic Programming",
"Category29.html": "KMP",
"Category377.html": "string suffix structures",
"Category36.html": "expresison and parsing",
"Category30.html": "Meet in The Middle",
"Category44.html": "Suffix Array-Tree",
"Category125.html": "0-1 Knapsack",
"Category14.html": "Balanced Binary Search Trees",
"Category318.html": "MO?s Algorithm (Query square root decomposition)",
"Category42.html": "FFT",
"Category22.html": "Convex hull",
"Category31.html": "TopologicalSort",
"Category65.html": "2sat",
"Category79.html": "LIS",
"Category230.html": "ACM-ICPC Dhaka Site Regional Contests",
"Category435.html": "polynomial",
"Category131.html": "All Pair Shortest Path (Floyd-Warshall)",
"Category124.html": "LCS",
"Category35.html": "Aho-Corasick",
"Category208.html": "LCA",
"Category24.html": "EulerianTour",
"Category231.html": "Strongly Connected Components",
"Category743.html": "interactive",
"Category84.html": "back-tracking",
"Category150.html": "Lowest Common Ancestor",
"Category227.html": "Suffix automaton",
"Category319.html": "Centroid Decomposition",
"Category27.html": "line sweep",
"Category54.html": "Hungarian Algorithm",
"Category169.html": "Reasoning",
"Category59.html": "Gaussian elimination",
"Category106.html": "DFS&amp;BFS",
"Category130.html": "Coin Change",
"Category170.html": "Strategy",
"Category669.html": "Mobius Function",
"Category48.html": "Math Games",
"Category103.html": "Edit Distance",
"Category112.html": "ad hoc",
"Category166.html": "STL",
"Category651.html": "Persistent Segment Tree",
"Category701.html": "TowerOfHanoi",
"Category760.html": "Sqrt decomposition",
"Category800.html": "Numerical_Integration",
"Category64.html": "Articulation Point",
"Category69.html": "Heaps",
"Category164.html": "Complete Searsh",
"Category165.html": "Dijkstra",
"Category216.html": "bit manipulation",
"Category671.html": "Randomized Algorithm",
"Category132.html": "MCM &amp; OBST",
"Category221.html": "Simulated Annealing",
"Category308.html": "segment trees",
"Category37.html": "RMQ",
"Category63.html": "Simulation",
"Category80.html": "Bellman-Ford",
"Category309.html": "big numbers",
"Category315.html": "digit dp",
"Category378.html": "chinese remainder theorem",
"Category576.html": "0-1 BFS",
"Category610.html": "Square Root Decomposition",
"Category699.html": "BinarySearchVariants",
"Category34.html": "Rabin-Karp",
"Category45.html": "kth shortest path",
"Category173.html": "Optimization",
"Category174.html": "Game Theory",
"Category178.html": "Recursion",
"Category190.html": "Treap",
"Category348.html": "matrix exponentiation",
"Category421.html": "Minimum Spanning Tree",
"Category650.html": "2D Range Queries",
"Category662.html": "Minimum Cost Flow",
"Category738.html": "ETF",
"Category43.html": "Partitioning",
"Category52.html": "Grid compression",
"Category102.html": "schedules",
"Category175.html": "AI",
"Category321.html": "tries",
"Category361.html": "Graph basics concepts BFS &amp; DFS",
"Category555.html": "Kadane's Algorithm",
"Category50.html": "Range tree",
"Category53.html": "Newton Raphson method",
"Category171.html": "Float precision",
"Category195.html": "Difference Constraints",
"Category225.html": "flood fill",
"Category235.html": "binary search",
"Category275.html": "linked list",
"Category338.html": "Z algorithm",
"Category474.html": "Minkowski addition",
"Category661.html": "Prefix Sums",
"Category16.html": "Algorithm X",
"Category18.html": "Voronoi",
"Category19.html": "Max points on line",
"Category20.html": "Minimum Enclosing Circle",
"Category23.html": "Polygon centroid",
"Category38.html": "Pigeonhole principle",
"Category39.html": "Factoradic Index",
"Category57.html": "Linear Programming",
"Category128.html": "Biconnected Component",
"Category180.html": "data structure",
"Category209.html": "bst",
"Category234.html": "dfs",
"Category304.html": "dp",
"Category438.html": "maxflow",
"Category481.html": "MST",
"Category505.html": "big mod",
"Category547.html": "SQRT Heuristic",
"Category584.html": "frequency ARRAY",
"Category28.html": "Circle sweep",
"Category46.html": "maximum empty rectangle ",
"Category51.html": "Stable Marriage"}

# Iterate through the folder
for file in os.listdir(folder):
    # print(file[1])
    # Checking if the file is present in the list
    if file in files_to_rename:
        # construct current name using file name and path
        old_name = os.path.join(folder, file)
        # print(str(files_to_rename[file]))
        new_base = files_to_rename[file] + '.html'

        new_name = os.path.join(folder, new_base)

        os.rename(old_name, new_name)

# verify the result
res = os.listdir(folder)
# print(res)

